{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Recipes app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is the documentation for the Recipes app."
  },
  "servers": [
    {
      "url": "https://response-201-back.onrender.com",
      "description": "development server"
    }
  ],
  "tags": [
    {
      "name": "Recipes",
      "description": "Operations about users."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "User",
      "description": "User data."
    },
    {
      "name": "Ingredients",
      "description": "Operations to manage ingredients."
    },
    {
      "name": "Categories",
      "description": "Operations to manage categories."
    }
  ],
  "paths": {
    "/api/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "summary": "Get all categories",
        "operationId": "getAllCategories",
        "description": "Returns a list of all recipe categories.",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "example": "64ab1234abcd5678ef901234"
                      },
                      "name": {
                        "type": "string",
                        "example": "Desserts"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/recipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get all recipes",
        "operationId": "getAllRecipes",
        "description": "A list of recipes with pagination, sorting, and filtering by ingredient and category.",
        "security": [],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "Number of recipes per page"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "nameRecipe",
                "cookingTime",
                "calories"
              ],
              "example": "nameRecipe"
            },
            "description": "Field to sort by"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Sorting order"
          },
          {
            "in": "query",
            "name": "ingredient",
            "schema": {
              "type": "string"
            },
            "description": "Filter recipes by ingredient ID"
          },
          {
            "in": "query",
            "name": "category",
            "schema": {
              "type": "string"
            },
            "description": "Filter recipes by category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found recipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found recipes!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "enrichedRecipes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/recipeWithFavorite"
                          }
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 5
                        },
                        "currentPage": {
                          "type": "integer",
                          "example": 2
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 10
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 50
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "post": {
        "tags": [
          "Recipes"
        ],
        "summary": "Create a new recipe",
        "operationId": "createRecipes",
        "description": "Creates a recipe and assigns the authenticated user as the owner.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "nameRecipe",
                  "recipeDescription",
                  "instructions",
                  "ingredients",
                  "recipeCategory",
                  "calories",
                  "cookingTime"
                ],
                "properties": {
                  "nameRecipe": {
                    "type": "string",
                    "example": "Greek Salad"
                  },
                  "dishPhoto": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://example.com/photos/salad.jpg"
                  },
                  "recipeDescription": {
                    "type": "string",
                    "example": "Fresh and tasty salad"
                  },
                  "instructions": {
                    "type": "string",
                    "example": "Chop vegetables, mix and serve."
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "measure"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "64e2abc9f6a0123456789012"
                        },
                        "measure": {
                          "type": "string",
                          "example": "100g"
                        }
                      }
                    }
                  },
                  "recipeCategory": {
                    "type": "string",
                    "example": "Salads"
                  },
                  "calories": {
                    "type": "number",
                    "example": 250
                  },
                  "cookingTime": {
                    "type": "string",
                    "example": "15 min"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully create a recipe!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/recipe"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/api/recipes/myRecipes": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get my recipes",
        "operationId": "getMyRecipes",
        "description": "Returns recipes created by the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully found user's recipes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Your recipes have been successfully found!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "recipes",
                        "pagination"
                      ],
                      "properties": {
                        "recipes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/recipe"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer",
                              "example": 1
                            },
                            "perPage": {
                              "type": "integer",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "example": 4
                            },
                            "totalPages": {
                              "type": "integer",
                              "example": 1
                            },
                            "hasNextPage": {
                              "type": "boolean",
                              "example": false
                            },
                            "hasPreviousPage": {
                              "type": "boolean",
                              "example": false
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/api/recipes/favorites": {
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get user's favorite recipes",
        "operationId": "getFavoriteRecipes",
        "description": "Returns recipes marked as favorite by the authenticated user.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "example": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "perPage",
            "schema": {
              "type": "integer",
              "example": 10
            },
            "description": "Number of recipes per page"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string",
              "enum": [
                "nameRecipe",
                "cookingTime",
                "calories",
                "createdAt"
              ],
              "example": "nameRecipe"
            },
            "description": "Field to sort by"
          },
          {
            "in": "query",
            "name": "sortOrder",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            },
            "description": "Sorting order"
          }
        ],
        "responses": {
          "200": {
            "description": "Favorite recipes found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Favorite recipes found."
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "recipes",
                        "pagination"
                      ],
                      "properties": {
                        "recipes": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/recipe"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "required": [
                            "page",
                            "perPage",
                            "totalItems",
                            "totalPages",
                            "hasNextPage",
                            "hasPreviousPage"
                          ],
                          "properties": {
                            "page": {
                              "type": "integer",
                              "example": 1
                            },
                            "perPage": {
                              "type": "integer",
                              "example": 10
                            },
                            "totalItems": {
                              "type": "integer",
                              "example": 4
                            },
                            "totalPages": {
                              "type": "integer",
                              "example": 1
                            },
                            "hasNextPage": {
                              "type": "boolean",
                              "example": false
                            },
                            "hasPreviousPage": {
                              "type": "boolean",
                              "example": false
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/api/recipes/{recipeId}/favorites": {
      "patch": {
        "tags": [
          "Recipes"
        ],
        "summary": "Add a recipe to user's favorites",
        "operationId": "addFavoriteRecipe",
        "description": "Add a recipe to user's favorites",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6462a8f74c3d0ddd28897fbf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe successfully added to favorites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Recipe added to favorites"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Remove a recipe from favorites",
        "operationId": "deleteRecipeFromFavorites",
        "description": "Removes a recipe from the authenticated user's list of favorite recipes.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "description": "ID of the recipe to remove from favorites",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe successfully removed from favorites",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "The recipe has been successfully removed from favorites."
                    },
                    "data": {
                      "type": "object",
                      "description": "Updated user data",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "example": "686427b219cea74e6af7056c"
                        },
                        "favoriteRecipes": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": [
                              "6462a8f74c3d0ddd28897fb8"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/api/recipes/{recipeId}": {
      "delete": {
        "tags": [
          "Recipes"
        ],
        "summary": "Delete my recipe",
        "operationId": "deleteOwnRecipe",
        "description": "Deletes a recipe if it was created by the authenticated user. Also removes it from all users' favorites.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "The recipe has been successfully removed."
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Recipe deleted successfully and removed from all favorites"
                        },
                        "recipeId": {
                          "type": "string",
                          "example": "6462a8f74c3d0ddd28897fb8"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "403": {
            "$ref": "#/components/responses/403"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      },
      "get": {
        "tags": [
          "Recipes"
        ],
        "summary": "Get recipe by id",
        "operationId": "getRecipeById",
        "description": "Returns recipes by id.",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "recipeId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get recipe by recipeId!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found recipe with id 123!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/recipe"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/api/ingredients": {
      "get": {
        "tags": [
          "Ingredients"
        ],
        "summary": "Get all available ingredients",
        "operationId": "getAllIngredients",
        "description": "Get all ingredients",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully found ingredients",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "ingredients"
                  ],
                  "properties": {
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "example": {
                    "ingredients": [
                      "Squid",
                      "Cabbage",
                      "Baking Powder"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "operationId": "loginUser",
        "description": "Login a user",
        "security": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "Users email that was used for registration",
                    "type": "string",
                    "format": "email",
                    "example": "john_doe@email.com"
                  },
                  "password": {
                    "description": "Users password that was used for registration",
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 30,
                    "example": "fdse235!@"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logs in the user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in a user!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/LoginResponseData"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found or email not registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found or email not registered"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a user",
        "operationId": "RegisterUser",
        "description": "Register a user",
        "security": [],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "description": "Users name",
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 30,
                    "example": "John Doe"
                  },
                  "email": {
                    "description": "Users valid email",
                    "type": "string",
                    "format": "email",
                    "example": "john_doe@email.com"
                  },
                  "password": {
                    "description": "Users password",
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 30,
                    "example": "fdse235!@"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registers a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout a user",
        "operationId": "LogoutUser",
        "description": "Logout a user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Logs out a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad request"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user",
        "operationId": "userCurrent",
        "description": "Get current user info",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get info about user by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found info about user"
                    },
                    "data": {
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden - user is not the owner of the resource",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 403
                },
                "message": {
                  "type": "string",
                  "example": "You are not allowed to delete this recipe"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Contact not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "recipe": {
        "type": "object",
        "required": [
          "nameRecipe",
          "instructions",
          "ingredients",
          "recipeCategory",
          "cookingTime",
          "recipeDescription",
          "owner"
        ],
        "properties": {
          "nameRecipe": {
            "type": "string",
            "example": "Cabbage Soup"
          },
          "dishPhoto": {
            "type": "string",
            "format": "url",
            "example": "http://example.com/photo.jpg"
          },
          "recipeDescription": {
            "type": "string",
            "example": "A classic British cake made with almond sponge cake..."
          },
          "instructions": {
            "type": "string",
            "example": "Preheat oven to 350° F. Spray a 9x13-inch baking pan..."
          },
          "ingredients": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "id",
                "measure"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "example": "6462a8f74c3d0ddd28897fbf"
                },
                "measure": {
                  "type": "string",
                  "example": "200g"
                }
              }
            }
          },
          "recipeCategory": {
            "type": "string",
            "example": "Lamb"
          },
          "cookingTime": {
            "type": "string",
            "example": "30"
          },
          "owner": {
            "type": "string",
            "example": "5f8f8c44c9e77a001a1b2c3d"
          }
        }
      },
      "recipeWithFavorite": {
        "allOf": [
          {
            "$ref": "#/components/schemas/recipe"
          },
          {
            "type": "object",
            "properties": {
              "isFavorite": {
                "type": "boolean",
                "example": true
              }
            }
          }
        ]
      },
      "LoginResponseData": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "required": [
              "accessToken"
            ],
            "properties": {
              "accessToken": {
                "type": "string",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            }
          }
        }
      },
      "user": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "68655a534d78a90790563b36"
          },
          "name": {
            "type": "string",
            "description": "Name of user",
            "example": "Dave Norton"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email of user",
            "example": "mark.davon@gmail.com"
          },
          "favoriteRecipes": {
            "type": "array",
            "description": "favorite recipes",
            "items": {
              "type": "string",
              "example": "64a1234567890abcdef99999"
            }
          }
        }
      }
    }
  }
}